// The float value that is closer than any other to **pi**, the ratio of the circumference of a circle to its diameter.
const PI = 3.141592653589793

// The float value that is closer than any other to **e**, the base of the natural logarithms.
const E = 2.718281828459045

// Compute the absolute value of a number value.
macro abs<T : number>(t: T) {
    if (t < 0) {
        return -t
    } else {
        return t
    }
}

// Compiute the smaller of two number values.
macro min<T : number>(a: T, b: T) {
    if (a < b) {
        return a
    } else {
        return b
    }
}

// Compute the greater of two number values.
macro max<T : number>(a: T, b: T) {
    if (a > b) {
        return a
    } else {
        return b
    }
}

// Compute the trigonometric sine of an angle.
macro sin(x: float) -> float

// Compute the trigonometric cosine of an angle.
macro cos(x: float) -> float

// Compute the correctly rounded positive square root of a float value.
macro sqrt(x: float) -> float

// Compute the smallest (closest to negative infinity) float value that is greater than or equal to the 
// argument and is equal to a mathematical integer.
macro ceil(x: float) -> float

// Compute the largest (closest to positive infinity) float value that is less than or equal to the 
// argument and is equal to a mathematical integer.
macro floor(x: float) -> float

// Compute the value of the first argument raised to the power of the second argument.
macro pow(base: float, exponent: float) -> float

// Compute the closest int to the argument, with ties rounding to positive infinity.
@native
macro round(x: float) -> int
